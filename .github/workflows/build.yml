name: build and deploy
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve Version
        run: |
          echo "version=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_ENV
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '21'
          java-package: 'jdk+fx'
      - name: package with gradle
        run: ./gradlew jpackage
      - name: save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deb-release
          path: build/jpackage/*.deb
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '21'
          java-package: 'jdk+fx'
      - name: package with gradle
        run: ./gradlew jpackage
      - name: save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exe-release
          path: build/jpackage/*.msi
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '21'
          java-package: 'jdk+fx'
      - name: package with gradle
        run: ./gradlew jpackage
      - name: save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dmg-release
          path: build/jpackage/*.dmg
  release:
    needs: [ build-linux, build-windows, build-macos ]
    runs-on: ubuntu-latest
    steps:
      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ needs.build-linux.outputs.artifacts }}
            ${{ needs.build-windows.outputs.artifacts }}
            ${{ needs.build-macos.outputs.artifacts }}
          tag_name: ${{ env.version }}
